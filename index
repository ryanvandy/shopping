<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping List Manager</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for Inter font and general body styling */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5; /* Light gray background */
            display: flex;
            justify-content: center;
            align-items: flex-start; /* Align to the top */
            min-height: 100vh;
            padding: 2rem; /* Add some padding around the content */
            box-sizing: border-box; /* Include padding in element's total width and height */
        }

        /* Styling for the list items and delete buttons */
        .list-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1rem;
            margin-bottom: 0.5rem;
            background-color: #ffffff;
            border-radius: 0.5rem; /* Rounded corners for list items */
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* Subtle shadow */
            transition: all 0.2s ease-in-out;
        }

        .list-item:hover {
            transform: translateY(-2px); /* Slight lift on hover */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .delete-button {
            background-color: #ef4444; /* Red for delete */
            color: white;
            padding: 0.3rem 0.6rem;
            border-radius: 0.375rem; /* Rounded corners for delete button */
            font-size: 0.875rem;
            cursor: pointer;
            transition: background-color 0.2s ease-in-out;
            border: none; /* Remove default button border */
        }

        .delete-button:hover {
            background-color: #dc2626; /* Darker red on hover */
        }

        /* Responsive adjustments for smaller screens */
        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }
            .list-container {
                width: 100%; /* Full width on small screens */
                margin-bottom: 1.5rem; /* Space between containers */
            }
            .main-content-wrapper {
                flex-direction: column; /* Stack lists vertically on small screens */
                align-items: center;
            }
        }
    </style>
</head>
<body class="bg-gray-100 flex justify-center items-start min-h-screen p-8">
    <div class="main-content-wrapper flex flex-col md:flex-row gap-8 w-full max-w-5xl">
        <!-- Aldi List Section -->
        <div class="list-container bg-white p-6 rounded-xl shadow-lg flex-1 border border-gray-200">
            <h2 class="text-3xl font-bold text-gray-800 mb-6 text-center">Aldi Shopping List</h2>
            <div class="flex gap-3 mb-6">
                <input type="text" id="aldi-item-input" placeholder="Add new item..."
                       class="flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm">
                <button id="add-aldi-item"
                        class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-200 ease-in-out transform hover:scale-105">
                    Add Item
                </button>
            </div>
            <ul id="aldi-list" class="space-y-3">
                <!-- Aldi items will be added here -->
            </ul>
        </div>

        <!-- Target List Section -->
        <div class="list-container bg-white p-6 rounded-xl shadow-lg flex-1 border border-gray-200">
            <h2 class="text-3xl font-bold text-gray-800 mb-6 text-center">Target Shopping List</h2>
            <div class="flex gap-3 mb-6">
                <input type="text" id="target-item-input" placeholder="Add new item..."
                       class="flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 shadow-sm">
                <button id="add-target-item"
                        class="bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-200 ease-in-out transform hover:scale-105">
                    Add Item
                </button>
            </div>
            <ul id="target-list" class="space-y-3">
                <!-- Target items will be added here -->
            </ul>
        </div>
    </div>

    <script>
        // Function to create a new list item with a delete button
        function createListItem(itemName) {
            const listItem = document.createElement('li');
            listItem.className = 'list-item'; // Apply Tailwind classes for styling

            const itemText = document.createElement('span');
            itemText.textContent = itemName;
            // Added mr-4 (margin-right: 1rem) to create space between text and button
            itemText.className = 'text-gray-700 text-lg mr-4'; // Styling for item text with margin

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.className = 'delete-button'; // Apply Tailwind classes for styling
            deleteButton.onclick = function() {
                listItem.remove(); // Remove the parent list item when clicked
            };

            listItem.appendChild(itemText);
            listItem.appendChild(deleteButton);

            return listItem;
        }

        // Get references to Aldi elements
        const aldiInput = document.getElementById('aldi-item-input');
        const addAldiBtn = document.getElementById('add-aldi-item');
        const aldiList = document.getElementById('aldi-list');

        // Add event listener for Aldi "Add Item" button
        addAldiBtn.addEventListener('click', () => {
            const itemName = aldiInput.value.trim(); // Get item name and remove whitespace
            if (itemName) { // Only add if input is not empty
                aldiList.appendChild(createListItem(itemName));
                aldiInput.value = ''; // Clear the input field
            }
        });

        // Allow adding items by pressing Enter in the Aldi input field
        aldiInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter') {
                addAldiBtn.click(); // Simulate a click on the add button
            }
        });

        // Get references to Target elements
        const targetInput = document.getElementById('target-item-input');
        const addTargetBtn = document.getElementById('add-target-item');
        const targetList = document.getElementById('target-list');

        // Add event listener for Target "Add Item" button
        addTargetBtn.addEventListener('click', () => {
            const itemName = targetInput.value.trim(); // Get item name and remove whitespace
            if (itemName) { // Only add if input is not empty
                targetList.appendChild(createListItem(itemName));
                targetInput.value = ''; // Clear the input field
            }
        });

        // Allow adding items by pressing Enter in the Target input field
        targetInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter') {
                addTargetBtn.click(); // Simulate a click on the add button
            }
        });
    </script>
</body>
</html>
